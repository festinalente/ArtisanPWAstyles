
@font-face {
  font-family: "Roboto Slab";
  src: url("/frontendStatic/css/fonts/RobotoSlab-VariableFont_wght.ttf") format("truetype");
  font-style: normal;
}

@font-face {
  font-family: "Redressed Regular";
  src: url("/frontendStatic/css/fonts/Redressed-Regular.ttf") format("truetype");
  font-style: normal;
}

@font-face {
  font-family: "Belleza Regular";
  src: url("/frontendStatic/css/fonts/Belleza-Regular.ttf") format("truetype");
  font-style: normal;
}

$title-fonts: "Roboto Slab";

$font-stack: "Roboto Slab", "Times New Roman", Times, serif;

$reading-font: Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif;
//Arial, Helvetica, sans-serif;
$primary-color: hsl(0, 0%, 100%);
//hsl(39, 63%, 59%)
//hsl(0, 19%, 18%)
//hsl(11, 39%, 76%)
//hsl(12, 35%, 42%)
//hsl(0, 11%, 83%)
//hsl(180, 36%, 49%);
//hsl(39, 63%, 59%);
$base-color: hsl(360, 100%, 100%);

$secondary-color: hsl(210, 34%, 42%);

$title-color: hsl(213, 19%, 18%);

$tertiary-color: hsl(230, 19%, 18%);

$darker-primary: hsl(191, 39%, 76%);

$darker-primary-transparent: hsla(360, 100%, 100%, 0.8);

$menu: hsl(360, 100%, 100%);

$attention-color: hsl(180, 36%, 49%);
//$attention-color: #f7be42;

$primary-shaddow: #f5c396;

$standard-grey: #00000066;

$warning-color: #d9534f;

$orange: #f15925;
//white test:
$globalpad: 0.5em;

$mobileMenuHeight: 17.5vh;


$standardMargin: 1em;

$breakpoints: (phone: 320px,
               tablet: 768px,
               desktop: 1024px) !default;

$media-expressions: (screen: "screen",
                   handheld: "handheld",
                   retina2x:
                   ("(-webkit-min-device-pixel-ratio: 2)",
                   "(min-resolution: 192dpi)")) !default;

@mixin verticalCenter() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin readingFontSize($px, $lineHeight) {
  font-family: $reading-font;
  font-size: $px;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: $lineHeight;
}

@mixin standardFont(){
  font-family: $reading-font;
  font-size: 24px;
  font-style: normal;
  font-variant: normal;
  color: #333;
  font-weight: 400;
  line-height: 32px;
}



/**
  * @funtion makeShaddow
  * @param blurRadius bigger means bigger, lighter shaddow
  * @param spread This is the size of shaddow (0 === same size as element), (10px === el.height, width + 10px)
  * @param the offsets basically control how box fits relative to the element
  * Drop shadow lays outside an elemen
  */
@mixin dropShaddow($offsetX, $offsetY, $blurRadius, $spread, $color){
  -webkit-box-shadow: $offsetX $offsetY $blurRadius $spread $color;
  -moz-box-shadow: $offsetX $offsetY $blurRadius $spread $color;
  box-shadow: $offsetX $offsetY $blurRadius $spread $color;
}

@mixin insetShaddow($offsetX, $offsetY, $blurRadius, $spread, $color){
  -webkit-box-shadow: inset $offsetX $offsetY $blurRadius $spread $color;
  -moz-box-shadow: inset $offsetX $offsetY $blurRadius $spread $color;
  box-shadow: inset $offsetX $offsetY $blurRadius $spread $color;
}

@mixin dualShaddow($offsetXin, $offsetYin, $blurRadiusin, $spreadin, $colorin, $offsetX, $offsetY, $blurRadius, $spread, $color){
  -webkit-box-shadow: inset $offsetXin $offsetYin $blurRadiusin $spreadin $colorin, $offsetX $offsetY $blurRadius $spread $color;
  -moz-box-shadow: inset $offsetXin $offsetYin $blurRadiusin $spreadin $colorin, $offsetX $offsetY $blurRadius $spread $color;
  box-shadow: inset $offsetXin $offsetYin $blurRadiusin $spreadin $colorin, $offsetX $offsetY $blurRadius $spread $color;
}

@mixin dropShaddowBlue(){
  @include dropShaddow(0px, 0px, 5px, 1px, $tertiary-color);
}

@mixin dropShaddowGrey(){
  @include dropShaddow(0px, 0px, 5px, 1px, $standard-grey);
}

@mixin standardBox($float) {
  //@include standardFont();
  color: $title-color;
  margin: 0.2em;
  float: $float;
  display: flex;
  flex: 0 1 22%;
  font-family: sans-serif;
  font-size: 1.2em;
}

@font-face {
 //font-family: Pots;
 //src: url('pots.ttf');
}

$boxheight: calc((100vh - #{$mobileMenuHeight} - (#{$standardMargin} * 4))/2);
$mobileWidth: calc(100vw - (#{$standardMargin} * 2));

@mixin cardImageRules(){
  //width: 95vw;
  min-width: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  height: $boxheight;
  margin: $standardMargin;
  -webkit-box-shadow: 0 0 9px 4px $secondary-color;
  -moz-box-shadow: 0 0 9px 4px $secondary-color;
  box-shadow: 0 0 9px 4px $secondary-color;
  //@include dropShaddowBlue();
  @include verticalCenter();
}

@mixin placeholder($color){
  background-color: $color;
  //width: 95vw;
  min-width: 300px;
  display: flex;
  align-items: center;
  justify-content: center;
  height: $boxheight;
  margin: $standardMargin;
  -webkit-box-shadow: 0 0 9px 4px $secondary-color;
  -moz-box-shadow: 0 0 9px 4px $secondary-color;
  box-shadow: 0 0 9px 4px $secondary-color;
  //@include dropShaddowBlue();
  @include verticalCenter();
}

@mixin hoverEffect(){
  -webkit-animation: bounce 0.3s linear;
  -moz-animation: bounce 0.3s linear;
  animation: bounce 0.3s linear;
  border-bottom: solid;
  border-bottom-color: $attention-color;
}

@mixin lrGradient($color1, $color2) {
  background: $color1;
  background: linear-gradient(90deg, $color1 0%, $color2 50%);
}

@mixin btn(){
  touch-action: manipulation;
  cursor: pointer;
  vertical-align: middle;
  font-family: $font-stack;
  font-size: 1.2em;
  color: #fff;
  border: none;
  padding-left: 1em;
  padding-right: 1em;
  max-width: 20em;
}

@mixin uniformBorder(){
  border-style: solid;
  border-width: 0.2em;
  border-color: $secondary-color;
  border-radius: 0.1em;
}

@mixin atentionBorder(){
  border-style: solid;
  border-width: 0.2em;
  border-color: $attention-color;
  border-radius: 0.1em;
}

@mixin lrGradient($color1, $color2) {
  background: $color1;
  background: linear-gradient(90deg, $color1 0%, $color2 50%);
}
